!function(){"use strict";const Map=window.mapboxgl.Map,AttributionControl=window.mapboxgl.AttributionControl,GeolocateControl=window.mapboxgl.GeolocateControl,NavigationControl=window.mapboxgl.NavigationControl;class WalkMap{constructor(container,host){this._loaded=!1,this._map=new Map({container:container,style:"https://api.maptiler.com/maps/bright/style.json?key=Ufz2DspPpwHKhct0Kj6J",center:[-2.017322,50.774277],zoom:14,minZoom:12,maxZoom:19,pitch:0,hash:!0,attributionControl:!1}),this._map.addControl(new GeolocateControl({positionOptions:{enableHighAccuracy:!0},trackUserLocation:!0})),this._map.addControl(new NavigationControl,"top-right"),this._map.addControl(new AttributionControl({}),"bottom-left"),this._map.on("load",(()=>{this._loaded=!0}))}get map(){return this._map}addTrail(trailSource){const fn=()=>{this._map.addSource(trailSource.id,trailSource.source),this._map.addLayer(trailSource.layer),this._map.addLayer(trailSource.symbols)};this._loaded?fn.call():this._map.on("load",fn)}toggleTrail(layer,enabled){this._map.setLayoutProperty(layer,"visibility",enabled?"visible":"none"),this._map.setLayoutProperty(layer+"-symbols","visibility",enabled?"visible":"none")}}class TrailSource{constructor(url,colour,name){this._id=(()=>{let seed=Date.now();return window.performance&&"function"==typeof window.performance.now&&(seed+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(c=>{let r=(seed+16*Math.random())%16|0;return seed=Math.floor(seed/16),("x"===c?r:11&r).toString(16)}))})(),this._name=name,this._colour=colour,this._source={type:"geojson",data:url},this._layer={id:this._id,type:"line",source:this._id,layout:{"line-join":"round","line-cap":"round",visibility:"none"},paint:{"line-color":colour,"line-width":2.5,"line-dasharray":[3,3],"line-opacity":1}},this._symbols={id:this._id+"-symbols",source:this._id,type:"symbol",layout:{"text-font":["Noto Sans Regular"],"text-size":14,"symbol-placement":"line","text-field":"{name}",visibility:"none"},paint:{"text-color":"white","text-halo-blur":1,"text-halo-color":colour,"text-halo-width":2}}}get id(){return this._id}get layer(){return this._layer}get symbols(){return this._symbols}get source(){return this._source}get colour(){return this._colour}}class ActionButton{constructor(container){this._container=container,this._enabled=!1,this._root=this._render(),this._container.appendChild(this._root),this._root.addEventListener("click",(evt=>{this._enabled=!this._enabled;const event=new CustomEvent("action-toggle",{detail:{enabled:this._enabled}});this._container.dispatchEvent(event)}))}_render(){const root=document.createElement("div");return root.classList.add("control"),root.id="overlay-icon",root.innerHTML="\n            <img src='img/jubilee.svg'>\n        ",root}}class TrailToggleButton{constructor(label,container,layerId,colour){this._label=label,this._container=container,this._layerId=layerId,this._enabled=!1,this._colour=colour,this._root=this._render(),this._container.appendChild(this._root),this._root.addEventListener("click",(evt=>{const icon=this._root.querySelector(".enabled");this._enabled?icon.classList.add("hidden"):icon.classList.remove("hidden"),this._enabled=!this._enabled;const event=new CustomEvent("layer-toggle",{detail:{enabled:this._enabled,layer:this._layerId}});this._container.dispatchEvent(event)}))}_render(){const root=document.createElement("div");return root.classList.add("layer","control","hide"),root.style.backgroundColor=this._colour,root.innerHTML=`\n            <div class='enabled hidden'>\n                <img src='img/circle-check.svg'/>\n            </div>\n            <span>${this._label}</span>\n        `,root}toggle(show){!0===show?(this._root.classList.remove("hide"),this._root.classList.add("show")):(this._root.classList.remove("show"),this._root.classList.add("hide"))}}new class{constructor(){this._walkMap=new WalkMap("map",config.host),this._walks=[new TrailSource("./data/parish.walk.1.geojson","#487bb6","Parish Walk"),new TrailSource("./data/eastend.walk.2.geojson","#958cae","East End Walk"),new TrailSource("./data/heritage.walk.3.geojson","#b78200","Heritage Walk"),new TrailSource("./data/heath.walk.4.geojson","#dc0608","Heath Walk")],this._mobileControls=document.getElementById("mobile-controls"),this._buttons=[new TrailToggleButton("Parish Walk",this._mobileControls,this._walks[0].id,this._walks[0].colour),new TrailToggleButton("East End Walk",this._mobileControls,this._walks[1].id,this._walks[1].colour),new TrailToggleButton("Heritage Walk",this._mobileControls,this._walks[2].id,this._walks[2].colour),new TrailToggleButton("Heath Walk",this._mobileControls,this._walks[3].id,this._walks[3].colour)],this._walks.forEach((walk=>{this._walkMap.addTrail(walk)})),this._actionButton=new ActionButton(this._mobileControls),this._mobileControls.addEventListener("layer-toggle",(evt=>{this._walkMap.toggleTrail(evt.detail.layer,evt.detail.enabled)})),this._mobileControls.addEventListener("action-toggle",(evt=>{this._buttons.forEach((button=>button.toggle(evt.detail.enabled)))}))}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
