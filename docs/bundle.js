!function(){"use strict";const Map=window.mapboxgl.Map,AttributionControl=window.mapboxgl.AttributionControl,GeolocateControl=window.mapboxgl.GeolocateControl,NavigationControl=window.mapboxgl.NavigationControl;class WalkMap{constructor(container){this._loaded=!1,this._map=new Map({container:container,style:"https://api.maptiler.com/maps/bright/style.json?key=Ufz2DspPpwHKhct0Kj6J",center:[-2.017322,50.774277],zoom:14,minZoom:12,maxZoom:19,pitch:0,hash:!0,attributionControl:!1}),this._map.addControl(new GeolocateControl({positionOptions:{enableHighAccuracy:!0},trackUserLocation:!0})),this._map.addControl(new NavigationControl,"top-right"),this._map.addControl(new AttributionControl({customAttribution:"&copy; Corfe Mullen Town Council &amp; Wendy Dix"}),"bottom-left"),this._map.on("load",(()=>{this._loaded=!0}))}get map(){return this._map}addTrail(trailSource){const fn=()=>{this._map.addSource(trailSource.id,trailSource.source),this._map.addLayer(trailSource.layer),this._map.addLayer(trailSource.symbols)};this._loaded?fn.call():this._map.on("load",fn)}toggleTrail(layer,enabled){this._map.setLayoutProperty(layer,"visibility",enabled?"visible":"none"),this._map.setLayoutProperty(layer+"-symbols","visibility",enabled?"visible":"none")}}class TrailSource{constructor(url,colour,name){this._id=(()=>{let seed=Date.now();return window.performance&&"function"==typeof window.performance.now&&(seed+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(c=>{let r=(seed+16*Math.random())%16|0;return seed=Math.floor(seed/16),("x"===c?r:11&r).toString(16)}))})(),this._name=name,this._colour=colour,this._source={type:"geojson",data:url},this._layer={id:this._id,type:"line",source:this._id,layout:{"line-join":"round","line-cap":"round",visibility:"none"},paint:{"line-color":colour,"line-width":2.5,"line-dasharray":[3,3],"line-opacity":1}},this._symbols={id:this._id+"-symbols",source:this._id,type:"symbol",layout:{"text-font":["Noto Sans Regular"],"text-size":14,"symbol-placement":"line","text-field":"{name}",visibility:"none"},paint:{"text-color":"white","text-halo-blur":1,"text-halo-color":colour,"text-halo-width":2}}}get id(){return this._id}get layer(){return this._layer}get symbols(){return this._symbols}get source(){return this._source}get colour(){return this._colour}}class ActionButton{constructor(container){this._container=container,this._enabled=!1,this._root=this._render(),this._container.appendChild(this._root),this._root.addEventListener("click",(evt=>{this._enabled=!this._enabled;const event=new CustomEvent("action-toggle",{detail:{enabled:this._enabled}});this._container.dispatchEvent(event)}))}_render(){const root=document.createElement("div");return root.classList.add("control"),root.id="overlay-icon",root.innerHTML="\n            <img src='img/jubilee.svg'>\n        ",root}}class TrailToggleButton{constructor(label,container,layerId,colour){this._label=label,this._container=container,this._layerId=layerId,this._enabled=!1,this._colour=colour,this._root=this._render(),this._container.appendChild(this._root),this._root.addEventListener("click",(evt=>{const icon=this._root.querySelector(".enabled");this._enabled?icon.classList.add("hidden"):icon.classList.remove("hidden"),this._enabled=!this._enabled;const event=new CustomEvent("layer-toggle",{detail:{enabled:this._enabled,layer:this._layerId}});this._container.dispatchEvent(event)}))}_render(){const root=document.createElement("div");return root.classList.add("layer","control","hide"),root.style.backgroundColor=this._colour,root.innerHTML=`\n            <div class='enabled hidden'>\n                <img src='img/circle-check.svg'/>\n            </div>\n            <span>${this._label}</span>\n        `,root}toggle(show){!0===show?(this._root.classList.remove("hide"),this._root.classList.add("show")):(this._root.classList.remove("show"),this._root.classList.add("hide"))}}new class{constructor(){this._walkMap=new WalkMap("map"),this._walks=[new TrailSource("./data/geojson/parish.walk.1.geojson","#487bb6","Parish Walk"),new TrailSource("./data/geojson/eastend.walk.2.geojson","#958cae","East End Walk"),new TrailSource("./data/geojson/heritage.walk.3.geojson","#b78200","Heritage Walk"),new TrailSource("./data/geojson/heath.walk.4.geojson","#dc0608","Heath Walk")],this._mobileControls=document.getElementById("mobile-controls"),this._buttons=[new TrailToggleButton("Parish Walk",this._mobileControls,this._walks[0].id,this._walks[0].colour),new TrailToggleButton("East End Walk",this._mobileControls,this._walks[1].id,this._walks[1].colour),new TrailToggleButton("Heritage Walk",this._mobileControls,this._walks[2].id,this._walks[2].colour),new TrailToggleButton("Heath Walk",this._mobileControls,this._walks[3].id,this._walks[3].colour)],this._walks.forEach((walk=>{this._walkMap.addTrail(walk)})),this._actionButton=new ActionButton(this._mobileControls),this._mobileControls.addEventListener("layer-toggle",(evt=>{this._walkMap.toggleTrail(evt.detail.layer,evt.detail.enabled)})),this._mobileControls.addEventListener("action-toggle",(evt=>{this._buttons.forEach((button=>button.toggle(evt.detail.enabled)))}))}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9zcmMvdWkvbWFwL21hcGxpYnJlLmpzIiwiLi4vc3JjL21hcC5qcyIsIi4uL3NyYy91dGlsLmpzIiwiLi4vc3JjL3VpL2NvbnRyb2xzLmpzIiwiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBNYXAgPSB3aW5kb3cubWFwYm94Z2wuTWFwO1xuZXhwb3J0IGNvbnN0IEF0dHJpYnV0aW9uQ29udHJvbCA9IHdpbmRvdy5tYXBib3hnbC5BdHRyaWJ1dGlvbkNvbnRyb2w7XG5leHBvcnQgY29uc3QgR2VvbG9jYXRlQ29udHJvbCA9IHdpbmRvdy5tYXBib3hnbC5HZW9sb2NhdGVDb250cm9sO1xuZXhwb3J0IGNvbnN0IE5hdmlnYXRpb25Db250cm9sID0gd2luZG93Lm1hcGJveGdsLk5hdmlnYXRpb25Db250cm9sO1xuXG5cbiIsImltcG9ydCB7IEF0dHJpYnV0aW9uQ29udHJvbCwgR2VvbG9jYXRlQ29udHJvbCwgTWFwLCBOYXZpZ2F0aW9uQ29udHJvbCB9IGZyb20gJy4vdWkvbWFwL21hcGxpYnJlJztcbmltcG9ydCB7IHV1aWR2NCB9IGZyb20gJy4vdXRpbCc7XG5cbmNsYXNzIFdhbGtNYXAge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lcikge1xuICAgICAgICB0aGlzLl9sb2FkZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fbWFwID0gbmV3IE1hcCh7XG4gICAgICAgICAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICAgICAgICAgIHN0eWxlOiAnaHR0cHM6Ly9hcGkubWFwdGlsZXIuY29tL21hcHMvYnJpZ2h0L3N0eWxlLmpzb24/a2V5PVVmejJEc3BQcHdIS2hjdDBLajZKJyxcbiAgICAgICAgICAgIGNlbnRlcjogWy0yLjAxNzMyMiwgNTAuNzc0Mjc3XSxcbiAgICAgICAgICAgIHpvb206IDE0LFxuICAgICAgICAgICAgbWluWm9vbTogMTIsXG4gICAgICAgICAgICBtYXhab29tOiAxOSxcbiAgICAgICAgICAgIHBpdGNoOiAwLFxuICAgICAgICAgICAgaGFzaDogdHJ1ZSxcbiAgICAgICAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2VcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fbWFwLmFkZENvbnRyb2wobmV3IEdlb2xvY2F0ZUNvbnRyb2woe1xuICAgICAgICAgICAgcG9zaXRpb25PcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRyYWNrVXNlckxvY2F0aW9uOiB0cnVlLFxuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMuX21hcC5hZGRDb250cm9sKFxuICAgICAgICAgICAgbmV3IE5hdmlnYXRpb25Db250cm9sKCksXG4gICAgICAgICAgICAndG9wLXJpZ2h0JyxcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fbWFwLmFkZENvbnRyb2woXG4gICAgICAgICAgICBuZXcgQXR0cmlidXRpb25Db250cm9sKHtcbiAgICAgICAgICAgICAgICBjdXN0b21BdHRyaWJ1dGlvbjogXCImY29weTsgQ29yZmUgTXVsbGVuIFRvd24gQ291bmNpbCAmYW1wOyBXZW5keSBEaXhcIlxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAnYm90dG9tLWxlZnQnLFxuICAgICAgICApO1xuXG4gICAgICAgIHRoaXMuX21hcC5vbignbG9hZCcsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2xvYWRlZCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldCBtYXAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXA7XG4gICAgfVxuXG4gICAgYWRkVHJhaWwodHJhaWxTb3VyY2UpIHtcbiAgICAgICAgY29uc3QgZm4gPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9tYXAuYWRkU291cmNlKHRyYWlsU291cmNlLmlkLCB0cmFpbFNvdXJjZS5zb3VyY2UpO1xuICAgICAgICAgICAgdGhpcy5fbWFwLmFkZExheWVyKHRyYWlsU291cmNlLmxheWVyKTtcbiAgICAgICAgICAgIHRoaXMuX21hcC5hZGRMYXllcih0cmFpbFNvdXJjZS5zeW1ib2xzKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMuX2xvYWRlZCkge1xuICAgICAgICAgICAgZm4uY2FsbCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fbWFwLm9uKCdsb2FkJywgZm4pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2xlVHJhaWwobGF5ZXIsIGVuYWJsZWQpIHtcbiAgICAgICAgdGhpcy5fbWFwLnNldExheW91dFByb3BlcnR5KFxuICAgICAgICAgICAgbGF5ZXIsICd2aXNpYmlsaXR5JywgZW5hYmxlZCA/ICd2aXNpYmxlJyA6ICdub25lJ1xuICAgICAgICApO1xuICAgICAgICB0aGlzLl9tYXAuc2V0TGF5b3V0UHJvcGVydHkoXG4gICAgICAgICAgICBsYXllciArIFwiLXN5bWJvbHNcIiwgJ3Zpc2liaWxpdHknLCBlbmFibGVkID8gJ3Zpc2libGUnIDogJ25vbmUnXG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jbGFzcyBUcmFpbFNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IodXJsLCBjb2xvdXIsIG5hbWUpIHtcbiAgICAgICAgdGhpcy5faWQgPSB1dWlkdjQoKTtcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuX2NvbG91ciA9IGNvbG91cjtcbiAgICAgICAgdGhpcy5fc291cmNlID0ge1xuICAgICAgICAgICAgdHlwZTogJ2dlb2pzb24nLFxuICAgICAgICAgICAgZGF0YTogdXJsLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9sYXllciA9IHtcbiAgICAgICAgICAgICdpZCc6IHRoaXMuX2lkLFxuICAgICAgICAgICAgJ3R5cGUnOiAnbGluZScsXG4gICAgICAgICAgICAnc291cmNlJzogdGhpcy5faWQsXG4gICAgICAgICAgICAnbGF5b3V0Jzoge1xuICAgICAgICAgICAgICAgICdsaW5lLWpvaW4nOiAncm91bmQnLFxuICAgICAgICAgICAgICAgICdsaW5lLWNhcCc6ICdyb3VuZCcsXG4gICAgICAgICAgICAgICAgJ3Zpc2liaWxpdHknOiAnbm9uZScsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ3BhaW50Jzoge1xuICAgICAgICAgICAgICAgICdsaW5lLWNvbG9yJzogY29sb3VyLFxuICAgICAgICAgICAgICAgICdsaW5lLXdpZHRoJzogMi41LFxuICAgICAgICAgICAgICAgICdsaW5lLWRhc2hhcnJheSc6IFtcbiAgICAgICAgICAgICAgICAgICAgMyxcbiAgICAgICAgICAgICAgICAgICAgMyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICdsaW5lLW9wYWNpdHknOiAxLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fc3ltYm9scyA9IHtcbiAgICAgICAgICAgICdpZCc6IHRoaXMuX2lkICsgXCItc3ltYm9sc1wiLFxuICAgICAgICAgICAgJ3NvdXJjZSc6IHRoaXMuX2lkLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwic3ltYm9sXCIsXG4gICAgICAgICAgICBcImxheW91dFwiOiB7XG4gICAgICAgICAgICAgICAgXCJ0ZXh0LWZvbnRcIjogW1wiTm90byBTYW5zIFJlZ3VsYXJcIl0sXG4gICAgICAgICAgICAgICAgXCJ0ZXh0LXNpemVcIjogMTQsXG4gICAgICAgICAgICAgICAgXCJzeW1ib2wtcGxhY2VtZW50XCI6IFwibGluZVwiLFxuICAgICAgICAgICAgICAgIFwidGV4dC1maWVsZFwiOiAne25hbWV9JyxcbiAgICAgICAgICAgICAgICAndmlzaWJpbGl0eSc6ICdub25lJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInBhaW50XCI6IHtcbiAgICAgICAgICAgICAgICBcInRleHQtY29sb3JcIjogXCJ3aGl0ZVwiLFxuICAgICAgICAgICAgICAgIFwidGV4dC1oYWxvLWJsdXJcIjogMSxcbiAgICAgICAgICAgICAgICBcInRleHQtaGFsby1jb2xvclwiOiBjb2xvdXIsXG4gICAgICAgICAgICAgICAgXCJ0ZXh0LWhhbG8td2lkdGhcIjogMlxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICB9XG5cbiAgICBnZXQgbGF5ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sYXllcjtcbiAgICB9XG5cbiAgICBnZXQgc3ltYm9scygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N5bWJvbHM7XG4gICAgfVxuXG4gICAgZ2V0IHNvdXJjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZTtcbiAgICB9XG5cbiAgICBnZXQgY29sb3VyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29sb3VyO1xuICAgIH1cblxufVxuXG5cbmV4cG9ydCB7IFdhbGtNYXAsIFRyYWlsU291cmNlfTtcbiIsImV4cG9ydCBjb25zdCB1dWlkdjQgPSAoKSA9PiB7XG4gICAgbGV0IHNlZWQgPSBEYXRlLm5vdygpO1xuICAgIGlmICh3aW5kb3cucGVyZm9ybWFuY2UgJiYgdHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3cgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgc2VlZCArPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICB9XG5cbiAgICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCAoYykgPT4ge1xuICAgICAgICBsZXQgciA9IChzZWVkICsgTWF0aC5yYW5kb20oKSAqIDE2KSAlIDE2IHwgMDtcbiAgICAgICAgc2VlZCA9IE1hdGguZmxvb3Ioc2VlZCAvIDE2KTtcblxuICAgICAgICByZXR1cm4gKGMgPT09ICd4JyA/IHIgOiByICYgKDB4MyB8IDB4OCkpLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn07XG4iLCJjbGFzcyBBY3Rpb25CdXR0b24ge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lcikge1xuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fcm9vdCA9IHRoaXMuX3JlbmRlcigpO1xuICAgICAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5fcm9vdCk7XG5cbiAgICAgICAgdGhpcy5fcm9vdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcblxuICAgICAgICAgICAgdGhpcy5fZW5hYmxlZCA9ICF0aGlzLl9lbmFibGVkO1xuXG4gICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBDdXN0b21FdmVudCgnYWN0aW9uLXRvZ2dsZScsIHtcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdGhpcy5fZW5hYmxlZFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfcmVuZGVyKCkge1xuICAgICAgICBjb25zdCByb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHJvb3QuY2xhc3NMaXN0LmFkZCgnY29udHJvbCcpO1xuICAgICAgICByb290LmlkID0gJ292ZXJsYXktaWNvbic7XG4gICAgICAgIHJvb3QuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGltZyBzcmM9J2ltZy9qdWJpbGVlLnN2Zyc+XG4gICAgICAgIGA7XG4gICAgICAgIHJldHVybiByb290O1xuICAgIH1cbn1cblxuY2xhc3MgVHJhaWxUb2dnbGVCdXR0b24ge1xuXG4gICAgY29uc3RydWN0b3IobGFiZWwsIGNvbnRhaW5lciwgbGF5ZXJJZCwgY29sb3VyKSB7XG4gICAgICAgIHRoaXMuX2xhYmVsID0gbGFiZWw7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5fbGF5ZXJJZCA9IGxheWVySWQ7XG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fY29sb3VyID0gY29sb3VyO1xuICAgICAgICB0aGlzLl9yb290ID0gdGhpcy5fcmVuZGVyKCk7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLl9yb290KTtcblxuICAgICAgICB0aGlzLl9yb290LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWNvbiA9IHRoaXMuX3Jvb3QucXVlcnlTZWxlY3RvcignLmVuYWJsZWQnKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX2VuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLl9lbmFibGVkID0gIXRoaXMuX2VuYWJsZWQ7XG5cbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdsYXllci10b2dnbGUnLCB7XG4gICAgICAgICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRoaXMuX2VuYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgIGxheWVyOiB0aGlzLl9sYXllcklkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfcmVuZGVyKCkge1xuICAgICAgICBjb25zdCByb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHJvb3QuY2xhc3NMaXN0LmFkZCgnbGF5ZXInLCAnY29udHJvbCcsICdoaWRlJyk7XG4gICAgICAgIHJvb3Quc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5fY29sb3VyO1xuICAgICAgICByb290LmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2VuYWJsZWQgaGlkZGVuJz5cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz0naW1nL2NpcmNsZS1jaGVjay5zdmcnLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHNwYW4+JHt0aGlzLl9sYWJlbH08L3NwYW4+XG4gICAgICAgIGA7XG5cbiAgICAgICAgcmV0dXJuIHJvb3Q7XG4gICAgfVxuXG4gICAgdG9nZ2xlKHNob3cpIHtcbiAgICAgICAgaWYgKHNob3cgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRoaXMuX3Jvb3QuY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XG4gICAgICAgICAgICB0aGlzLl9yb290LmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcm9vdC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcbiAgICAgICAgICAgIHRoaXMuX3Jvb3QuY2xhc3NMaXN0LmFkZChcImhpZGVcIilcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5cbmV4cG9ydCB7IFRyYWlsVG9nZ2xlQnV0dG9uIH07XG5leHBvcnQgeyBBY3Rpb25CdXR0b24gfTtcbiIsImltcG9ydCB7IFRyYWlsU291cmNlLCBXYWxrTWFwIH0gZnJvbSAnLi9tYXAnO1xuaW1wb3J0IHsgQWN0aW9uQnV0dG9uLCBUcmFpbFRvZ2dsZUJ1dHRvbiB9IGZyb20gJy4vdWkvY29udHJvbHMnO1xuXG5jbGFzcyBBcHBsaWNhdGlvbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX3dhbGtNYXAgPSBuZXcgV2Fsa01hcCgnbWFwJyk7XG5cbiAgICAgICAgdGhpcy5fd2Fsa3MgPSBbXG4gICAgICAgICAgICBuZXcgVHJhaWxTb3VyY2UoJy4vZGF0YS9nZW9qc29uL3BhcmlzaC53YWxrLjEuZ2VvanNvbicsICcjNDg3YmI2JywgJ1BhcmlzaCBXYWxrJyksXG4gICAgICAgICAgICBuZXcgVHJhaWxTb3VyY2UoJy4vZGF0YS9nZW9qc29uL2Vhc3RlbmQud2Fsay4yLmdlb2pzb24nLCAnIzk1OGNhZScsICdFYXN0IEVuZCBXYWxrJyksXG4gICAgICAgICAgICBuZXcgVHJhaWxTb3VyY2UoJy4vZGF0YS9nZW9qc29uL2hlcml0YWdlLndhbGsuMy5nZW9qc29uJywgJyNiNzgyMDAnLCAnSGVyaXRhZ2UgV2FsaycpLFxuICAgICAgICAgICAgbmV3IFRyYWlsU291cmNlKCcuL2RhdGEvZ2VvanNvbi9oZWF0aC53YWxrLjQuZ2VvanNvbicsICcjZGMwNjA4JywgJ0hlYXRoIFdhbGsnKSxcbiAgICAgICAgXTtcbiAgICAgICAgdGhpcy5fbW9iaWxlQ29udHJvbHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9iaWxlLWNvbnRyb2xzJyk7XG5cbiAgICAgICAgdGhpcy5fYnV0dG9ucyA9IFtcbiAgICAgICAgICAgIG5ldyBUcmFpbFRvZ2dsZUJ1dHRvbignUGFyaXNoIFdhbGsnLCB0aGlzLl9tb2JpbGVDb250cm9scywgdGhpcy5fd2Fsa3NbMF0uaWQsIHRoaXMuX3dhbGtzWzBdLmNvbG91ciksXG4gICAgICAgICAgICBuZXcgVHJhaWxUb2dnbGVCdXR0b24oJ0Vhc3QgRW5kIFdhbGsnLCB0aGlzLl9tb2JpbGVDb250cm9scywgdGhpcy5fd2Fsa3NbMV0uaWQsIHRoaXMuX3dhbGtzWzFdLmNvbG91ciksXG4gICAgICAgICAgICBuZXcgVHJhaWxUb2dnbGVCdXR0b24oJ0hlcml0YWdlIFdhbGsnLCB0aGlzLl9tb2JpbGVDb250cm9scywgdGhpcy5fd2Fsa3NbMl0uaWQsIHRoaXMuX3dhbGtzWzJdLmNvbG91ciksXG4gICAgICAgICAgICBuZXcgVHJhaWxUb2dnbGVCdXR0b24oJ0hlYXRoIFdhbGsnLCB0aGlzLl9tb2JpbGVDb250cm9scywgdGhpcy5fd2Fsa3NbM10uaWQsIHRoaXMuX3dhbGtzWzNdLmNvbG91ciksXG4gICAgICAgIF07XG5cbiAgICAgICAgdGhpcy5fd2Fsa3MuZm9yRWFjaCh3YWxrID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3dhbGtNYXAuYWRkVHJhaWwod2Fsayk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5fYWN0aW9uQnV0dG9uID0gbmV3IEFjdGlvbkJ1dHRvbih0aGlzLl9tb2JpbGVDb250cm9scyk7XG5cbiAgICAgICAgdGhpcy5fbW9iaWxlQ29udHJvbHMuYWRkRXZlbnRMaXN0ZW5lcignbGF5ZXItdG9nZ2xlJywgKGV2dCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fd2Fsa01hcC50b2dnbGVUcmFpbChldnQuZGV0YWlsLmxheWVyLCBldnQuZGV0YWlsLmVuYWJsZWQpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl9tb2JpbGVDb250cm9scy5hZGRFdmVudExpc3RlbmVyKCdhY3Rpb24tdG9nZ2xlJywgKGV2dCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiBidXR0b24udG9nZ2xlKGV2dC5kZXRhaWwuZW5hYmxlZCkpO1xuICAgICAgICB9KVxuXG4gICAgfVxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwbGljYXRpb24oKTtcbiJdLCJuYW1lcyI6WyJNYXAiLCJ3aW5kb3ciLCJtYXBib3hnbCIsIkF0dHJpYnV0aW9uQ29udHJvbCIsIkdlb2xvY2F0ZUNvbnRyb2wiLCJOYXZpZ2F0aW9uQ29udHJvbCIsIldhbGtNYXAiLCJbb2JqZWN0IE9iamVjdF0iLCJjb250YWluZXIiLCJ0aGlzIiwiX2xvYWRlZCIsIl9tYXAiLCJzdHlsZSIsImNlbnRlciIsInpvb20iLCJtaW5ab29tIiwibWF4Wm9vbSIsInBpdGNoIiwiaGFzaCIsImF0dHJpYnV0aW9uQ29udHJvbCIsImFkZENvbnRyb2wiLCJwb3NpdGlvbk9wdGlvbnMiLCJlbmFibGVIaWdoQWNjdXJhY3kiLCJ0cmFja1VzZXJMb2NhdGlvbiIsImN1c3RvbUF0dHJpYnV0aW9uIiwib24iLCJtYXAiLCJ0cmFpbFNvdXJjZSIsImZuIiwiYWRkU291cmNlIiwiaWQiLCJzb3VyY2UiLCJhZGRMYXllciIsImxheWVyIiwic3ltYm9scyIsImNhbGwiLCJlbmFibGVkIiwic2V0TGF5b3V0UHJvcGVydHkiLCJUcmFpbFNvdXJjZSIsInVybCIsImNvbG91ciIsIm5hbWUiLCJfaWQiLCJzZWVkIiwiRGF0ZSIsIm5vdyIsInBlcmZvcm1hbmNlIiwicmVwbGFjZSIsImMiLCJyIiwiTWF0aCIsInJhbmRvbSIsImZsb29yIiwidG9TdHJpbmciLCJ1dWlkdjQiLCJfbmFtZSIsIl9jb2xvdXIiLCJfc291cmNlIiwidHlwZSIsImRhdGEiLCJfbGF5ZXIiLCJsYXlvdXQiLCJsaW5lLWpvaW4iLCJsaW5lLWNhcCIsInZpc2liaWxpdHkiLCJwYWludCIsImxpbmUtY29sb3IiLCJsaW5lLXdpZHRoIiwibGluZS1kYXNoYXJyYXkiLCJsaW5lLW9wYWNpdHkiLCJfc3ltYm9scyIsInRleHQtZm9udCIsInRleHQtc2l6ZSIsInN5bWJvbC1wbGFjZW1lbnQiLCJ0ZXh0LWZpZWxkIiwidGV4dC1jb2xvciIsInRleHQtaGFsby1ibHVyIiwidGV4dC1oYWxvLWNvbG9yIiwidGV4dC1oYWxvLXdpZHRoIiwiQWN0aW9uQnV0dG9uIiwiX2NvbnRhaW5lciIsIl9lbmFibGVkIiwiX3Jvb3QiLCJfcmVuZGVyIiwiYXBwZW5kQ2hpbGQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsImRpc3BhdGNoRXZlbnQiLCJyb290IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJIVE1MIiwiVHJhaWxUb2dnbGVCdXR0b24iLCJsYWJlbCIsImxheWVySWQiLCJfbGFiZWwiLCJfbGF5ZXJJZCIsImljb24iLCJxdWVyeVNlbGVjdG9yIiwicmVtb3ZlIiwiYmFja2dyb3VuZENvbG9yIiwic2hvdyIsIl93YWxrTWFwIiwiX3dhbGtzIiwiX21vYmlsZUNvbnRyb2xzIiwiZ2V0RWxlbWVudEJ5SWQiLCJfYnV0dG9ucyIsImZvckVhY2giLCJ3YWxrIiwiYWRkVHJhaWwiLCJfYWN0aW9uQnV0dG9uIiwidG9nZ2xlVHJhaWwiLCJidXR0b24iLCJ0b2dnbGUiXSwibWFwcGluZ3MiOiJ5QkFBTyxNQUFNQSxJQUFNQyxPQUFPQyxTQUFTRixJQUN0QkcsbUJBQXFCRixPQUFPQyxTQUFTQyxtQkFDckNDLGlCQUFtQkgsT0FBT0MsU0FBU0UsaUJBQ25DQyxrQkFBb0JKLE9BQU9DLFNBQVNHLGtCQ0FqRCxNQUFNQyxRQUNGQyxZQUFZQyxXQUNSQyxLQUFLQyxTQUFVLEVBQ2ZELEtBQUtFLEtBQU8sSUFBSVgsSUFBSSxDQUNoQlEsVUFBV0EsVUFDWEksTUFBTywyRUFDUEMsT0FBUSxFQUFFLFNBQVUsV0FDcEJDLEtBQU0sR0FDTkMsUUFBUyxHQUNUQyxRQUFTLEdBQ1RDLE1BQU8sRUFDUEMsTUFBTSxFQUNOQyxvQkFBb0IsSUFHeEJWLEtBQUtFLEtBQUtTLFdBQVcsSUFBSWhCLGlCQUFpQixDQUN0Q2lCLGdCQUFpQixDQUNiQyxvQkFBb0IsR0FFeEJDLG1CQUFtQixLQUV2QmQsS0FBS0UsS0FBS1MsV0FDTixJQUFJZixrQkFDSixhQUVKSSxLQUFLRSxLQUFLUyxXQUNOLElBQUlqQixtQkFBbUIsQ0FDbkJxQixrQkFBbUIscURBRXZCLGVBR0pmLEtBQUtFLEtBQUtjLEdBQUcsUUFBUSxLQUNqQmhCLEtBQUtDLFNBQVUsS0FJdkJnQixVQUNJLE9BQU9qQixLQUFLRSxLQUdoQkosU0FBU29CLGFBQ0wsTUFBTUMsR0FBSyxLQUNQbkIsS0FB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
